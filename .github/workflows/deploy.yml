name: Build Backend and Push It to Container Registry

on:
  release:
    types: 
      - created
  
env:
  PROJECT_ID: motiongenerator
  SERVICE_NAME: motion-backend
  RELEASE_VERSION: ${GITHUB_REF#refs/*/}
  PYTHON_VERSION: 3.6.9
  RUN_REGION: us-central1
  NODE_VERSION: 13.x

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    
    env:
      GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements/dev.txt

    - name: Download model artifacts
      working-directory: backend
      run: 
        python scripts/download_artifacts.py

    - name: Lint with flake8
      working-directory: backend
      run: |
        flake8 . --count --ignore=E501 --show-source --statistics

    - name: Test with pytest
      working-directory: backend
      run: |
        python -m pytest .

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.BUILD_SA_KEY }}
        project_id: motiongenerator

    # Build and push image to Google Container Registry
    - name: Build
      working-directory: backend
      run: |
        echo "gcr.io/$PROJECT_ID/$SERVICE_NAME:${GITHUB_REF##*/}"
        ls | cat
        ls artifacts/model | cat
        gcloud builds submit \
          --quiet \
          --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:${GITHUB_REF##*/}" \
          --timeout 3600

    # Deploy image to Cloud Run
    - name: Deploy
      run: |-
        gcloud run deploy "$SERVICE_NAME" \
          --quiet \
          --region "$RUN_REGION" \
          --image "gcr.io/$PROJECT_ID/$SERVICE_NAME:${GITHUB_REF##*/}" \
          --platform "managed" \
          --allow-unauthenticated

  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name:
      uses: actions/setup-node@master
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      working-directory: frontend
      run: |
        npm install

    - name: Lint
      working-directory: frontend
      run: |
        npm run lint

    - name: Test
      working-directory: frontend
      run: |
        npm run test

    - name: Build
      working-directory: frontend
      run: |
        npm run build

    - name: Deploy to Firebase
      uses: w9jds/firebase-action@master
      with:
        args: deploy --only hosting:motiongenerator
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        PROJECT_PATH: ./frontend
